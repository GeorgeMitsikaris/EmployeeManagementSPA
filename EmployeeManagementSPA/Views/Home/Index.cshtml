@{
    ViewBag.Title = "Employee Index";
}

<div class="container mt-3">
    <div class="row">
        <button class="btn btn-primary m-auto" data-toggle="modal" data-target="#insertModal">Create New</button>
        <button class="btn btn-primary m-auto" onclick="getEmployees()">Back to list</button>
    </div>
    <div class="row col-sm-12">
        <div class="text-left display-4 m-auto">Employees</div>
        <table id="tblEmployees" class="table table-bordered table-hover text-center mt-3">
            <thead>
                <tr class="table-info">
                    <td class="font-weight-bold">
                        <button id="sortByName" class="btn btn-block btn-warning">
                            <p class="pr-3 d-inline">Name</p><span class="fa fa-arrow-up pr-1"></span><span class="fa fa-arrow-down"></span>
                        </button>
                        <div class="input-group-append">
                            <input id="txtSearchName" type="text" class="form-control" placeholder="Search" style="border-bottom-right-radius:0; border-top-right-radius:0" />
                            <button id="searchName" class="fa fa-search btn btn-light"></button>
                        </div>
                    </td>
                    <td class="font-weight-bold">
                        <button id="sortByEmail" class="btn btn-block btn-warning mr-3">
                            <p class="pr-3 d-inline">Email</p><span class="fa fa-arrow-up pr-1"></span><span class="fa fa-arrow-down"></span>
                        </button>
                        <div class="input-group-append">
                            <input id="txtSearchEmail" type="text" class="form-control" placeholder="Search" style="border-bottom-right-radius:0; border-top-right-radius:0" />
                            <button id="searchEmail" class="fa fa-search btn btn-light"></button>
                        </div>
                    </td>
                    <td class="font-weight-bold">
                        <button id="sortBySalary" class="btn btn-block btn-warning mr-3"><p class="pr-3 d-inline">Salary</p><span class="fa fa-arrow-up pr-1"></span><span class="fa fa-arrow-down"></span></button>
                        <div class="input-group-append">
                            <input id="txtSearchSalary" type="text" class="form-control" placeholder="Search" style="border-bottom-right-radius:0; border-top-right-radius:0" />
                            <button id="searchSalary" class="fa fa-search btn btn-light"></button>
                        </div>
                    </td>
                    <td colspan="3" class="font-weight-bold">Actions</td>
                </tr>
            </thead>
            <tbody id="tblBody"></tbody>
        </table>
    </div>
</div>

@* Modal for showing the details of an employee *@
<div id="employeeDetails" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">Employee Details</div>
                <button class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="displayName">Name</label>
                    <input id="displayName" type="text" disabled class="form-control" />
                </div>
                <div class="form-group">
                    <label for="displayEmail">Email</label>
                    <input id="displayEmail" type="text" disabled class="form-control" />
                </div>
                <div class="form-group">
                    <label for="displaySalary">Salary</label>
                    <input id="displaySalary" type="text" disabled class="form-control" />
                </div>
                <div class="modal-footer">
                    <button id="btnDetails" class="btn btn-info" data-dismiss="modal">Create</button>
                    <button class="btn btn-danger" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

@*Modal for creating a new employee*@
<div id="insertModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">Add New Employee</div>
                <button class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form>
                    <input type="hidden" id="employeeId" />
                    <div class="form-group">
                        <label for="name">Name</label>
                        <input type="text" id="name" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="email">Email</label>
                        <input type="email" id="email" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="salary">Salary</label>
                        <input type="text" id="salary" class="form-control" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button id="btnInsert" class="btn btn-info" data-dismiss="modal">Create</button>
                <button class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

@*modal for editing an existing employee*@
<div id="editModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">Edit Item Type</div>
                <button class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form>
                    <input id="editId" type="hidden" />
                    <div class="form-group">
                        <label for="name">Name</label>
                        <input type="text" id="editName" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="email">Email</label>
                        <input type="email" id="editEmail" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="salary">Salary</label>
                        <input type="text" id="editSalary" class="form-control" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button id="btnEditItem" class="btn btn-info" data-dismiss="modal">Save</button>
                <button class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

@* modal for deleting an employee *@
<div id="deleteModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">Are you sure you want to delete this Item Type?</div>
                <button class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form>
                    <input id="deleteId" type="hidden" />
                    <div class="form-group">
                        <label for="name">Name</label>
                        <input type="text" id="deleteName" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="email">Email</label>
                        <input type="email" id="deleteEmail" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="salary">Salary</label>
                        <input type="text" id="deleteSalary" class="form-control" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button id="btnDeleteItem" class="btn btn-info" data-dismiss="modal">Delete</button>
                <button class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        //Declaration of the sorting variables
        let sortName = 'asc';
        let sortEmail = 'asc';
        let sortSalary = 'asc';
        const searchName = $('#txtSearchName');
        const searchEmail = $('#txtSearchEmail');
        const searchSalary = $('#txtSearchSalary');
        const table = $('#tblEmployees');

        //Call the function getEmployees() which is declared below using hoisting
        getEmployees();

        //Ajax call to create a new employee
        $('#btnInsert').click(function () {
            const Name = $('#name').val();
            const Email = $('#email').val();
            const Salary = $('#salary').val();
            const Id = $('#employeeId').val();
            $.ajax({
                url: '/employees',
                method: 'post',
                //Using concise ES6 syntax
                data: { Name, Email, Salary },
                success: function () {
                    getEmployees();
                },
                error: function (error) {
                    console.log(error);
                }
            })
        })

        //Ajax call to update the Employee details
        $('#btnEditItem').click(function () {
            const id = $('#editId').val();
            const Name = $('#editName').val();
            const Email = $('#editEmail').val();
            const Salary = $('#editSalary').val();

            $.ajax({
                url: '/employees/' + id,
                method: 'put',
                //Using concise ES6 syntax
                data: { Name, Email, Salary },
                success: function () {
                    getEmployees();
                },
                error: (err) => {
                    console.log(err);
                }
            })
        })

        //Ajax call to delete the Employee
        $('#btnDeleteItem').click(function () {
            const id = $('#deleteId').val();
            console.log(id);
            $.ajax({
                url: '/employees/' + id,
                method: 'delete',
                success: function () {
                    getEmployees();
                },
                error: (err) => {
                    console.log(err);
                }
            })
        })

        //Ajax call to sort by name
        $('#sortByName').click(function () {
            $.ajax({
                url: `/employees/sortByName?sort=${sortName}`,
                method: 'get',
                success: function (response) {
                    table.find("tr:gt(0)").remove();
                    $.each(response, (ind, val) => {
                        createTable(val.Id, val.Name, val.Email, val.Salary);
                    })

                    sortName === 'asc' ? sortName = 'desc' : sortName = 'asc';
                },
                error: function (error) {
                    console.log(error);
                }
            })
        })


        //Ajax call to sort by email
        $('#sortByEmail').click(function () {
            $.ajax({
                url: `/employees/sortByEmail?sort=${sortEmail}`,
                method: 'get',
                success: function (response) {
                    $('#tblEmployees').find("tr:gt(0)").remove();
                    $.each(response, (ind, val) => {
                        createTable(val.Id, val.Name, val.Email, val.Salary);
                    })

                    sortEmail === 'asc' ? sortEmail = 'desc' : sortEmail = 'asc';
                },
                error: function (error) {
                    console.log(error);
                }
            })
        })


        //Ajax call to sort by salary
        $('#sortBySalary').click(function () {
            $.ajax({
                url: `/employees/sortBySalary?sort=${sortSalary}`,
                method: 'get',
                success: function (response) {
                    $('#tblEmployees').find("tr:gt(0)").remove();
                    $.each(response, (ind, val) => {
                        createTable(val.Id, val.Name, val.Email, val.Salary);
                    })
                    sortSalary === 'asc' ? sortSalary = 'desc' : sortSalary = 'asc';
                },
                error: function (error) {
                    console.log(error);
                }
            })
        })

        //Fetching the names for the autocomplete
        searchName.autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/employees/employeeNames?searchTerm=' + request.term,
                    method: 'get',
                    success: function (data) {
                        response(data);
                    },
                    error: function (error) {
                        console.log(error);
                    }
                })
            },
            //The following code highlights the selected text using regular expression
        }).data('ui-autocomplete')._renderItem = function (ul, item) {
            var expression = new RegExp("(" + this.term + ")", 'gi');
            var answer = item.label.replace(expression, "<span style='color:#f00'>$1</span>")


            return $('<li></li>').append('<a>' + answer + '</a>').appendTo(ul);
        }

        //Fetching the emails for the autocomplete
        searchEmail.autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/employees/employeeEmails?searchTerm=' + request.term,
                    method: 'get',
                    success: function (data) {
                        response(data);
                    },
                    error: function (error) {
                        console.log(error);
                    }
                })
            },
            //The following code highlights the selected text using regular expression
        }).data('ui-autocomplete')._renderItem = function (ul, item) {
            var expression = new RegExp("(" + this.term + ")", 'gi');
            var answer = item.label.replace(expression, "<span style='color:#f00'>$1</span>")


            return $('<li></li>').append('<a>' + answer + '</a>').appendTo(ul);
        }

        //Fetching the salaries for the autocomplete
        searchSalary.autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/employees/employeeSalaries?searchTerm=' + request.term,
                    method: 'get',
                    success: function (data) {
                        response(data);
                    },
                    error: function (error) {
                        console.log(error);
                    }
                })
            },
            //The following code highlights the selected text using regular expression
        }).data('ui-autocomplete')._renderItem = function (ul, item) {
            var expression = new RegExp("(" + this.term + ")", 'gi');
            var answer = item.label.replace(expression, "<span style='color:#f00'>$1</span>")


            return $('<li></li>').append('<a>' + answer + '</a>').appendTo(ul);
        }

        searchName.change(function () {
            const name = $(this).val();
            $.ajax({
                url: '/employees/searchByName?name=' + name,
                method: 'get',
                success: function (response) {
                    $('#tblEmployees').find("tr:gt(0)").remove();
                    $.each(response, (ind, val) => {
                        createTable(val.Id, val.Name, val.Email, val.Salary);
                    })
                }
            })
        })

        searchEmail.change(function () {
            const email = $(this).val();
            $.ajax({
                url: '/employees/searchByEmail?email=' + email,
                method: 'get',
                success: function (response) {
                    console.log(response);
                    $('#tblEmployees').find("tr:gt(0)").remove();
                    $.each(response, (ind, val) => {
                        createTable(val.Id, val.Name, val.Email, val.Salary);
                    })
                }
            })
        })

        searchSalary.change(function () {
            const salary = $(this).val();
            $.ajax({
                url: '/employees/searchBySalary?salary=' + salary,
                method: 'get',
                success: function (response) {
                    $('#tblEmployees').find("tr:gt(0)").remove();
                    $.each(response, (ind, val) => {
                        createTable(val.Id, val.Name, val.Email, val.Salary);
                    })
                }
            })
        })
    })


    //Functions

    // Ajax call to get all employees
    // The edit and delete buttons are created dynamically
    // They trigger the respective modal passing the Id through the data-id attribute
    function getEmployees() {
        const table = $('#tblEmployees')

        $.ajax({
            url: '/employees',
            method: 'get',
            success: function (response) {
                table.find("tr:gt(0)").remove();
                $.each(response, (ind, val) => {
                    createTable(val.Id, val.Name, val.Email, val.Salary);
                })
            }
        })
    }

    //This function finds the employee to be edited and fills the fields of the modal with their respective values
    function editItem(element) {
        //Retrieves the id from the custom data-id attribute
        const id = $(element).data('id');
        $.ajax({
            url: '/employees/' + id,
            method: 'get',
            success: function (response) {
                fillModalInputFields('edit', response)
            },
            error: function (error) {
                console.log(error);
            }
        })
    }

    //This function finds the employee to be deleted and fills the fields of the modal with their respective values
    function deleteItem(element) {
        //Retrieves the id from the custom data-id attribute
        const id = $(element).data('id');
        $.ajax({
            url: '/employees/' + id,
            method: 'get',
            success: function (response) {
                fillModalInputFields('delete', response)
            },
            error: function (error) {
                console.log(error);
            }
        })
    }

    //This function shows the details of the specific employee
    function details(element) {
        //Retrieves the id from the custom data-id attribute
        const id = $(element).data('id');
        $.ajax({
            url: '/employees/' + id,
            method: 'get',
            success: function (response) {
                fillModalInputFields('display', response);
            },
            error: function (error) {
                console.log(error);
            }
        })

    }

    //Helper Functions
    //--------------------------------------------------------
    //This function create the table after the ajax calls for getting and sorting the employees
    function createTable(id, name, email, salary) {
        $('#tblEmployees').append(`
            <tr>
                <td>${name}</td>
                <td>${email}</td>
                <td>${salary}</td>
                <td>
                    <button type="button" onclick="details(this)" class="btn btn-dark" data-toggle="modal" data-target="#employeeDetails" data-id="${id}">Details</button>
                </td>
                <td>
                    <button type="button" onclick="editItem(this)" class="btn btn-dark" data-toggle="modal" data-target="#editModal" data-id="${id}">Edit</button>
                </td>
                <td>
                    <button type="button" onclick="deleteItem(this)" class="btn btn-danger" data-toggle="modal" data-target="#deleteModal" data-id="${id}">Delete</button>
                </td>
            </tr>`
        )
    }

    //This function fills the modals for editing and deleting an employee
    function fillModalInputFields(value, response) {
        $('#' + value + 'Name').val(response.Name)
        $('#' + value + 'Email').val(response.Email)
        $('#' + value + 'Salary').val(response.Salary)
        $('#' + value + 'Id').val(response.Id)
    }
</script>
